# trigger on main pull
trigger:
  branches:
    include:
    - main

# initial build
stages:
- stage: docker
  jobs:
  - job: build
    variables:
        imageName: 'fakebookposts'

    steps:
    - task: Docker@2
      displayName: Build Docker Image
      inputs:
        repository: $(imageName)
        command: 'build'
        Dockerfile: 'Fakebook.Posts/Dockerfile'

# sonar cloud
- stage: sonarCloud
  dependsOn: []
  jobs:
  - job: build
    pool:
      vmImage: ubuntu-latest
    variables:
      buildConfiguration: 'Release'
      directory: 'Fakebook.Posts/Fakebook.Posts.WebApi'

    steps:
    - task: UseDotNet@2
      displayName: Use sdk 2.x
      inputs:
        packageType: sdk
        version: 2.x

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud Token'
        organization: '2011-fakebook-project3'
        scannerMode: 'MSBuild'
        projectKey: '2011-fakebook-project3_posts'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml

    - task: UseDotNet@2
      displayName: 'Use .NET 5 SDK'
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: dotnet build
      workingDirectory: 'Fakebook.Posts'

    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: 'test'
        arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover'
        publishTestResults: true
        workingDirectory: 'Fakebook.Posts'

    - task: SonarCloudAnalyze@1
      displayName: sonar run analysis

    - task: SonarCloudPublish@1
      displayName: sonar analysis publish
      inputs:
        pollingTimeoutSec: '300'